package jp.azuki.mikeneko.web.servlet;import java.io.IOException;import javax.servlet.ServletConfig;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import jp.azuki.mikeneko.authentication.Authentication;import jp.azuki.mikeneko.authentication.AuthenticationSupport;import jp.azuki.web.action.Action;import jp.azuki.web.constant.WebServiceException;import jp.azuki.web.servlet.AbstractServlet;import jp.azuki.web.view.View;public class MikeNekoServlet extends AbstractServlet {	/**	 * serialVersionUID	 */	private static final long serialVersionUID = -3145811643238326488L;	@Override	protected void doInitialize(ServletConfig aConfig) throws ServletException {		// TODO Auto-generated method stub	}	@Override	protected void doDestroy() {		// TODO Auto-generated method stub	}	public void doGet(final HttpServletRequest aReq, final HttpServletResponse aRes) throws ServletException, IOException {		doTask(aReq, aRes);	}	public void doPost(final HttpServletRequest aReq, final HttpServletResponse aRes) throws ServletException, IOException {		doTask(aReq, aRes);	}	private void doTask(final HttpServletRequest aReq, final HttpServletResponse aRes) throws ServletException, IOException {		aReq.setCharacterEncoding("UTF-8");		aRes.setCharacterEncoding("UTF-8");		Action action = createAction(aReq, aRes);		if (null != action) {			AuthenticationSupport anAuth = action.getClass().getAnnotation(AuthenticationSupport.class);			if (null != anAuth) {				Class<? extends Authentication> clazz = anAuth.value();				try {					Authentication auth = clazz.newInstance();					// 認証					auth.authenticate();					// TODO ダメなら				} catch (IllegalAccessException ex) {					throw new ServletException(ex);				} catch (InstantiationException ex) {					throw new ServletException(ex);				}			}			try {				// View view = new JSPView("home/home.jsp");				View view = action.action();				view.view(aReq, aRes);			} catch (WebServiceException ex) {				throw new ServletException(ex);			}		} else {			// 404		}	}	private Action createAction(final HttpServletRequest aReq, final HttpServletResponse aRes) throws ServletException, IOException {		Action act = null;		return act;	}}