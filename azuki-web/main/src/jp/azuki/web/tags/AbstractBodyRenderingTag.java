package jp.azuki.web.tags;import java.io.IOException;import javax.servlet.jsp.JspException;import javax.servlet.jsp.JspWriter;import javax.servlet.jsp.tagext.BodyContent;import javax.servlet.jsp.tagext.BodyTag;import javax.servlet.jsp.tagext.Tag;public abstract class AbstractBodyRenderingTag extends AbstractRenderingTag implements BodyTag {	/**	 * ボディコンテンツ	 */	private BodyContent bodyContent;	/**	 * ボディ文字列	 */	private String bodyString;	/**	 * コンストラクタ	 */	public AbstractBodyRenderingTag() {		super(AbstractBodyRenderingTag.class);	}	/**	 * コンストラクタ	 * 	 * @param aName 名前	 */	public AbstractBodyRenderingTag(final String aName) {		super(aName);	}	/**	 * コンストラクタ	 * 	 * @param aClass クラス	 */	public AbstractBodyRenderingTag(final Class<?> aClass) {		super(aClass);	}	@Override	public final int doStartTag() throws JspException {		return (BodyTag.EVAL_BODY_BUFFERED);	}	@Override	public final int doEndTag() throws JspException {		try {			JspWriter writer = getPageContext().getOut();			StringBuffer s = new StringBuffer();			doRendering(s);			// XXX ここでHTMLエスケープ文字変換したほうがいいのか・・・			writer.print(s.toString());		} catch (IOException ex) {			throw new JspException(ex);		}		return (Tag.EVAL_PAGE);	}	@Override	public void setBodyContent(final BodyContent aBodyContent) {		bodyContent = aBodyContent;	}	@Override	public void doInitBody() throws JspException {		// TODO Auto-generated method stub	}	@Override	public int doAfterBody() throws JspException {		bodyString = bodyContent.getString();		return (Tag.SKIP_BODY);	}	@Override	protected final void doRendering(final StringBuffer aRender) throws JspException {		doRendering(aRender, bodyString);	}	protected abstract void doRendering(final StringBuffer aRender, final String aBody) throws JspException;}